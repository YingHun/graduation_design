<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dl.mapper.GoodsMapper">

    <!--商品信息查询字段-->
    <sql id="stockColumns">
        id, category, code, name, stock, sold_quantity, unit_price, status, create_time, update_time
    </sql>

    <!--商品库存结果集-->
    <resultMap id="stockMap" type="com.dl.entity.StockEntity">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="category" property="category" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="stock" property="stock" jdbcType="INTEGER"/>
        <result column="sold_quantity" property="soldQuantity" jdbcType="INTEGER"/>
        <result column="unit_price" property="unitPrice" jdbcType="DECIMAL"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--商品分类信息结果集-->
    <resultMap id="categoryMap" type="com.dl.entity.CategoryEntity">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--商品进销信息结果集-->
    <resultMap id="invoicingMap" type="com.dl.entity.InvoicingEntity">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="category" property="category" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="contact" property="contact" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="quantity" property="quantity" jdbcType="INTEGER"/>
        <result column="unit_price" property="unitPrice" jdbcType="DECIMAL"/>
        <result column="discount" property="discount" jdbcType="DECIMAL"/>
        <result column="discounted_price" property="discountedPrice" jdbcType="DECIMAL"/>
        <result column="total_price" property="totalPrice" jdbcType="DECIMAL"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询库存信息-->
    <select id="selectGoodsStock" parameterType="com.dl.model.StockModel" resultMap="stockMap">
        SELECT
        t.id AS "id",
        s.name AS "category",
        t.code AS "code",
        t.name AS "name",
        t.stock AS "stock",
        t.sold_quantity AS "sold_quantity",
        t.unit_price AS "unit_price",
        CASE t.status
        WHEN '0' THEN "已上架"
        WHEN '1' THEN "已下架"
        WHEN '2' THEN "缺货"
        ELSE "未知状态"
        END "status",
        t.create_time AS "create_time",
        t.update_time AS "update_time"
        FROM
        tb_stock_info t, tb_category_info s
        WHERE
        t.category = s.code
        <trim prefix="AND" prefixOverrides="AND">
            <if test="category != '' and category != null">
                AND t.category = #{category, jdbcType=VARCHAR}
            </if>
            <if test="name != '' and name != null">
                AND t.name LIKE CONCAT('%', #{name, jdbcType=VARCHAR}, '%')
            </if>
            <if test="status != '' and status != null">
                AND t.status = #{status, jdbcType=VARCHAR}
            </if>
        </trim>
        ORDER BY t.category ASC, t.code ASC
        LIMIT #{start}, #{limit}
    </select>

    <!--查询库存总记录数-->
    <select id="selectStockCount" parameterType="com.dl.model.StockModel" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        tb_stock_info
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="category != '' and category != null">
                AND category = #{category, jdbcType=VARCHAR}
            </if>
            <if test="name != '' and name != null">
                AND name LIKE CONCAT('%', #{name, jdbcType=VARCHAR}, '%')
            </if>
            <if test="status != '' and status != null">
                AND status = #{status, jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <!--查询分类信息-->
    <select id="selectCategoryList" parameterType="com.dl.model.BaseModel" resultMap="categoryMap">
        SELECT
        id AS "id",
        code AS "code",
        name AS "name",
        CASE status
          WHEN '0' THEN "有效"
          WHEN '1' THEN "无效"
        ELSE "未知状态"
        END "status",
        create_time AS "create_time",
        update_time AS "update_time"
        FROM
        tb_category_info
        ORDER BY code ASC
        LIMIT #{start}, #{limit}
    </select>

    <!--查询分类信息记录数-->
    <select id="selectCategoryCount" parameterType="com.dl.model.BaseModel" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        tb_category_info
    </select>

    <!--查询进销货信息-->
    <select id="selectInvoicingList" parameterType="com.dl.model.InvoicingModel" resultMap="invoicingMap">
        SELECT
        t.id AS "id",
        s.name AS "category",
        r.name AS "code",
        t.contact AS "contact",
        t.telephone AS "telephone",
        t.address AS "address",
        t.quantity AS "quantity",
        t.unit_price AS "unit_price",
        t.discount AS "discount",
        t.discounted_price AS "discounted_price",
        t.total_price AS "total_price",
        CASE t.type
        WHEN 'in' THEN "进货"
        WHEN 'out' THEN "出货"
        ELSE "未知"
        END "type",
        CASE t.status
        WHEN '0' THEN "已完成"
        WHEN '1' THEN "未完成"
        ELSE "未知状态"
        END "status",
        t.create_time AS "create_time",
        t.update_time AS "update_time"
        FROM
        tb_invoicing_info t, tb_category_info s, tb_stock_info r
        WHERE
        t.category = s.code
        AND t.code = r.code
        <trim prefix="AND" prefixOverrides="AND">
            <if test="category != '' and category != null">
                t.category = #{category, jdbcType=VARCHAR}
            </if>
            <if test="code != '' and code != null">
                t.code = #{code, jdbcType=VARCHAR}
            </if>
            <if test="type != '' and type != null">
                t.type = #{type, jdbcType=VARCHAR}
            </if>
        </trim>
        ORDER BY t.id ASC
        LIMIT #{start}, #{limit}
    </select>

    <!--查询进销货记录数-->
    <select id="selectInvoicingCount" parameterType="com.dl.model.InvoicingModel" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        tb_invoicing_info
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="category != '' and category != null">
                AND category = #{category, jdbcType=VARCHAR}
            </if>
            <if test="code != '' and code != null">
                AND code = #{code, jdbcType=VARCHAR}
            </if>
            <if test="type != '' and type != null">
                AND type = #{type, jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <!--查询分类信息-->
    <select id="selectCategories" resultMap="categoryMap">
        SELECT code, name FROM tb_category_info
    </select>

    <!--查询商品信息-->
    <select id="selectGoodsByCategory" parameterType="com.dl.model.StockModel" resultMap="stockMap">
        SELECT code, name FROM tb_stock_info WHERE category = #{category, jdbcType=VARCHAR}
    </select>

    <!--根据商品编码查询商品信息-->
    <select id="selectGoodsByCode" parameterType="com.dl.model.StockModel" resultMap="stockMap">
        SELECT
        <include refid="stockColumns"/>
        FROM
        tb_stock_info
        WHERE
        code = #{code, jdbcType=VARCHAR}
    </select>

    <!--获取商品分类下的最大商品编码-->
    <select id="selectMaxGoodsCode" parameterType="com.dl.entity.StockEntity" resultType="java.lang.String">
        SELECT MAX(code) FROM tb_stock_info WHERE category = #{category, jdbcType=VARCHAR}
    </select>

    <!--更新商品信息-->
    <update id="updateGoods" parameterType="com.dl.entity.StockEntity">
        UPDATE tb_stock_info
        <trim prefix="SET" suffixOverrides=",">
            update_time = now(),
            <if test="name != null and name != ''">
                name = #{name, jdbcType=VARCHAR},
            </if>
            <if test="stock != '' || stock == 0">
                stock = #{stock, jdbcType=INTEGER},
            </if>
            <if test="soldQuantity != '' || stock == 0">
                sold_quantity = #{soldQuantity, jdbcType=INTEGER},
            </if>
            <if test="unitPrice != '' || stock == 0">
                unit_price = #{unitPrice, jdbcType=DECIMAL},
            </if>
            <if test="status != null and status != ''">
                status = #{status, jdbcType=VARCHAR},
            </if>
        </trim>
        WHERE
        code = #{code, jdbcType=VARCHAR}
    </update>

    <!--添加商品-->
    <insert id="insertGoods" parameterType="com.dl.entity.StockEntity">
        INSERT INTO tb_stock_info (
          category,
          code,
          name,
          stock,
          sold_quantity,
          unit_price,
          status,
          create_time,
          update_time
        ) VALUES (
          #{category, jdbcType=VARCHAR},
          #{code, jdbcType=VARCHAR},
          #{name, jdbcType=VARCHAR},
          #{stock, jdbcType=INTEGER},
          #{soldQuantity, jdbcType=INTEGER},
          #{unitPrice, jdbcType=DECIMAL},
          #{status, jdbcType=VARCHAR},
          now(),
          now()
        )
    </insert>

    <!--添加进销货信息-->
    <insert id="insertInvoicing" parameterType="com.dl.entity.InvoicingEntity">
        INSERT INTO tb_invoicing_info (
          category,
          code,
          contact,
          telephone,
          address,
          quantity,
          unit_price,
          discount,
          discounted_price,
          total_price,
          `type`,
          create_time,
          update_time
        ) VALUES (
          #{category, jdbcType=VARCHAR},
          #{code, jdbcType=VARCHAR},
          #{contact, jdbcType=VARCHAR},
          #{telephone, jdbcType=VARCHAR},
          #{address, jdbcType=VARCHAR},
          #{quantity, jdbcType=INTEGER},
          #{unitPrice, jdbcType=DECIMAL},
          #{discount, jdbcType=DECIMAL},
          #{discountedPrice, jdbcType=DECIMAL},
          #{totalPrice, jdbcType=DECIMAL},
          #{type, jdbcType=VARCHAR},
          now(),
          now()
        )
    </insert>

    <!--获取销售数据-->
    <select id="selectSaleReport" resultType="java.util.Map">
        SELECT
            a.create_date AS create_date,
            IFNULL( SUM( quantity ), 0 ) quantity,
            IFNULL( SUM( total_price ), 0 ) money
        FROM
            (
                SELECT
                    DATE_SUB( curdate( ), INTERVAL 6 DAY ) AS create_date UNION ALL
                SELECT
                    DATE_SUB( curdate( ), INTERVAL 5 DAY ) AS create_date UNION ALL
                SELECT
                    DATE_SUB( curdate( ), INTERVAL 4 DAY ) AS create_date UNION ALL
                SELECT
                    DATE_SUB( curdate( ), INTERVAL 3 DAY ) AS create_date UNION ALL
                SELECT
                    DATE_SUB( curdate( ), INTERVAL 2 DAY ) AS create_date UNION ALL
                SELECT
                    DATE_SUB( curdate( ), INTERVAL 1 DAY ) AS create_date UNION ALL
                SELECT
                    curdate( ) AS create_date
            ) a
        LEFT JOIN
          tb_invoicing_info b ON a.create_date = DATE( b.create_time ) AND b.type = 'out'
        GROUP BY
          a.create_date
    </select>
</mapper>